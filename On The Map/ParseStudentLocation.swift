//
//  ParseStudentLocation.swift
//  On The Map
//
//  Created by Marcus Ronélius on 2015-10-09.
//  Copyright © 2015 Ronelium Applications. All rights reserved.
//

import Foundation
import UIKit

struct ParseStudentLocation {
    var objectId: String? = nil //an auto-generated id/key generated by Parse which uniquely identifies a StudentLocation
    var uniqueKey: String? = nil //an extra (optional) key used to uniquely identify a StudentLocation; you should populate this value using your Udacity account (user) id
    var firstName = "" //the first name of the student which matches their Udacity profile first name
    var lastName = "" //the last name of the student which matches their Udacity profile last name
    var mapString = "" //the location string used for geocoding the student location
    var mediaURL = "" //the URL provided by the student
    var latitude: NSNumber = 0 //the latitude of the student location (ranges from -90 to 90)
    var longitude: NSNumber = 0 //the longitude of the student location (ranges from -180 to 180)
    var createdAt: NSDate? = nil //the date when the student location was created
    var updatedAt: NSDate? = nil //the date when the student location was last updated
    var ACL: String? = nil //the Parse access and control list (ACL), i.e. permissions, for this StudentLocation entry
    
    /* Construct a ParseStudentLocation from a dictionary */
    init(dictionary: [String : AnyObject]) {
        objectId = dictionary[ParseClient.JSONResponseKeys.ObjectId] as? String
        uniqueKey = dictionary[ParseClient.JSONResponseKeys.UniqueKey] as? String
        firstName = dictionary[ParseClient.JSONResponseKeys.FirstName] as! String
        lastName = dictionary[ParseClient.JSONResponseKeys.LastName] as! String
        mapString = dictionary[ParseClient.JSONResponseKeys.MapString] as! String
        mediaURL = dictionary[ParseClient.JSONResponseKeys.MediaUrl] as! String
        if !Reachability.isValidUrl(NSURL(string: mediaURL)) {
            if let validUrl = NSURL(string: mediaURL) {
                if let validMediaURL = Reachability.applyHTTPSchemeForURL(validUrl) {
                    mediaURL = validMediaURL
                }
            }
        }
        latitude = dictionary[ParseClient.JSONResponseKeys.Latitude] as! NSNumber
        longitude = dictionary[ParseClient.JSONResponseKeys.Longitude] as! NSNumber
        if (dictionary[ParseClient.JSONResponseKeys.CreatedAt] != nil) {
            createdAt = self.dateFromString(dictionary[ParseClient.JSONResponseKeys.CreatedAt] as! String)
        }
        if (dictionary[ParseClient.JSONResponseKeys.UpdatedAt] != nil) {
            updatedAt = self.dateFromString(dictionary[ParseClient.JSONResponseKeys.UpdatedAt] as! String)
        }
        
    }
    
    /* Helper: Convert an array of dictionaries to an array of ParseStudentLocation objects */
    static func studentLocationsFromResults(results: [[String : AnyObject]]) -> [ParseStudentLocation] {
        var studentLocations = [ParseStudentLocation]()
        
        for result in results {
            studentLocations.append(ParseStudentLocation(dictionary: result))
        }
        
        return studentLocations
    }
    
    static func studenLocationFromDictionary(dictionary: [String : AnyObject]) -> ParseStudentLocation {
        return ParseStudentLocation(dictionary: dictionary)
    }
    
    /* Helper: Create NSDate object from String */
    func dateFromString(dateString: String) -> NSDate {
        let dateFormatter = NSDateFormatter()
        dateFormatter.dateFormat = "yyyy-MM-dd'T'HH:mm:ss.AAA'Z'" //"2015-10-09T00:20:27.444Z"
        let date = dateFormatter.dateFromString(dateString)
        
        return date!
    }
}

/*
{
"results": [
{
    "mediaURL": "http://www.scienceanimated.com",
    "firstName": "KM",
    "longitude": -122.269960460253,
    "uniqueKey": "1234",
    "latitude": 41.236164095380403,
    "objectId": "WuLhlkFI1s",
    "createdAt": "2015-10-09T01:55:24.146Z",
    "updatedAt": "2015-10-09T01:55:24.146Z",
    "mapString": "Dunsmuir, CA",
    "lastName": "P"
},
*/